{"version":3,"sources":["actions/index.js","containers/places.js","containers/search_bar.js","components/chart.js","components/google_map.js","containers/weather_list.js","components/app.js","lang.js","reducers/index.js","reducers/reducer_weather.js","reducers/reducer_location.js","index.js"],"names":["ROOT_URL","process","fetchWeather","city","countryCode","dispatch","a","url","axios","get","response","type","payload","getPosition","navigator","geolocation","getCurrentPosition","coords","google","window","latlng","maps","LatLng","latitude","longitude","Geocoder","geocode","latLng","results","status","GeocoderStatus","OK","c","lc","component","country","cityAlt","r","rl","length","result","types","address_components","long_name","short_name","store","Searchbar","props","location","state","term","onInputChange","bind","onFormSubmit","prevProps","this","setState","events","target","value","event","preventDefault","onSubmit","className","placeholder","lang","aria-label","aria-describedby","onChange","Component","connect","bindActionCreators","height","width","data","color","_","round","sum","units","GoogleMap","Map","refs","map","zoom","center","lat","lng","lon","ref","WeatherList","cityData","name","coord","temps","list","weather","main","temp","pressures","pressure","humidities","humidity","key","temperature","renderWeather","language","indexOf","placeholderSearch","submit","Language","App","rootReducer","combineReducers","action","toLowerCase","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.0438d5b9.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const SET_LOCATION = \"SET_LOCATION\";\nexport const FETCH_WEATHER = \"FETCH_WEATHER\";\nexport const ROOT_URL = `https://api.openweathermap.org/data/2.5/forecast?appid=${process.env.REACT_APP_API_KEY}`;\n\nexport const fetchWeather = (city, countryCode) => async (dispatch) => {\n  const url = `${ROOT_URL}&q=${city},${countryCode ? countryCode : \"ar\"}`;\n  const response = await axios.get(url);\n\n  dispatch({\n    type: FETCH_WEATHER,\n    payload: response,\n  });\n};\n\nexport const setLocation = (data) => {\n  return {\n    type: SET_LOCATION,\n    payload: data,\n  };\n};\n","import { setLocation } from \"../actions\";\nimport { store } from \"../index\";\n\nconst getPosition = () => {\n  navigator.geolocation.getCurrentPosition(({ coords }) => {\n    const google = window.google;\n    let latlng = new google.maps.LatLng(coords.latitude, coords.longitude);\n    new google.maps.Geocoder().geocode({ latLng: latlng }, function (\n      results,\n      status\n    ) {\n      if (status === google.maps.GeocoderStatus.OK) {\n        if (results[1]) {\n          let country = null,\n            countryCode = null,\n            city = null,\n            cityAlt = null;\n          let c, lc, component;\n          for (let r = 0, rl = results.length; r < rl; r += 1) {\n            let result = results[r];\n            if (!city && result.types[0] === \"locality\") {\n              for (\n                c = 0, lc = result.address_components.length;\n                c < lc;\n                c += 1\n              ) {\n                component = result.address_components[c];\n\n                if (component.types[0] === \"locality\") {\n                  city = component.long_name;\n                  break;\n                }\n              }\n            } else if (\n              !city &&\n              !cityAlt &&\n              result.types[0] === \"administrative_area_level_1\"\n            ) {\n              for (\n                c = 0, lc = result.address_components.length;\n                c < lc;\n                c += 1\n              ) {\n                component = result.address_components[c];\n\n                if (component.types[0] === \"administrative_area_level_1\") {\n                  cityAlt = component.long_name;\n                  break;\n                }\n              }\n            } else if (!country && result.types[0] === \"country\") {\n              country = result.address_components[0].long_name;\n              countryCode = result.address_components[0].short_name;\n            }\n\n            if (city && country) {\n              break;\n            }\n          }\n          store.dispatch(\n            setLocation({\n              city,\n              cityAlt,\n              country,\n              countryCode,\n            })\n          );\n        }\n      }\n    });\n  });\n};\n\nexport default getPosition;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport getPosition from \"./places\";\nimport { fetchWeather } from \"../actions/index\";\n\nclass Searchbar extends Component {\n  constructor(props) {\n    super(props);\n    const { city, cityAlt } = this.props.location;\n    this.state = { term: `${!city && !cityAlt ? \"\" : city ? city : cityAlt}` };\n    this.onInputChange = this.onInputChange.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    getPosition();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location !== this.props.location) {\n      const { city, cityAlt } = this.props.location;\n      this.setState({\n        term: `${!city && !cityAlt ? \"\" : city ? city : cityAlt}`,\n      });\n    }\n  }\n\n  onInputChange(events) {\n    this.setState({ term: events.target.value });\n  }\n\n  onFormSubmit(event) {\n    event.preventDefault();\n    this.props.fetchWeather(this.state.term, this.props.location.countryCode);\n    this.setState({ term: \"\" });\n  }\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.onFormSubmit}>\n          <div className=\"input-group\">\n            <input\n              placeholder={this.props.lang[\"placeholderSearch\"]}\n              aria-label=\"Recipient's username\"\n              aria-describedby=\"basic-addon2\"\n              className=\"form-control\"\n              value={this.state.term}\n              onChange={this.onInputChange}\n            />\n\n            <div className=\"input-group-append input-group-button\">\n              <button type=\"submit\" className=\"btn btn-outline-secondary\">\n                {this.props.lang[\"submit\"]}\n              </button>\n            </div>\n          </div>\n        </form>\n        <div className=\"text-center m-2\">\n          {`${\n            this.props.location.country\n              ? `${this.props.lang[\"country\"]} ${this.props.location.country}`\n              : \"\"\n          }`}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ fetchWeather }, dispatch);\n}\n\nfunction mapStateToProps({ location }) {\n  return { location };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Searchbar);\n","import React from \"react\";\nimport _ from \"lodash\";\nimport {\n  Sparklines,\n  SparklinesLine,\n  SparklinesReferenceLine,\n} from \"react-sparklines\";\n\nfunction average(data) {\n  return _.round(_.sum(data) / data.length);\n}\n\nexport default (props) => {\n  return (\n    <div>\n      <Sparklines height={120} width={180} data={props.data}>\n        <SparklinesReferenceLine type=\"avg\" />\n        <SparklinesLine color={props.color}></SparklinesLine>\n      </Sparklines>\n      <div>\n        {average(props.data)} {props.units}\n      </div>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\n\nexport default class GoogleMap extends Component {\n  componentDidMount() {\n    const google = window.google;\n    new google.maps.Map(this.refs.map, {\n      zoom: 12,\n      center: {\n        lat: this.props.lat,\n        lng: this.props.lon,\n      },\n    });\n  }\n  render() {\n    return <div ref=\"map\" />;\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Chart from \"../components/chart\";\nimport GoogleMap from \"../components/google_map\";\n\nclass WeatherList extends Component {\n  renderWeather(cityData) {\n    const name = cityData.city.name;\n    const { lon, lat } = cityData.city.coord;\n    const temps = cityData.list.map((weather) => weather.main.temp - 273.15);\n    const pressures = cityData.list.map((weather) => weather.main.pressure);\n    const humidities = cityData.list.map((weather) => weather.main.humidity);\n    return (\n      <tr key={name}>\n        <td>\n          <GoogleMap lat={lat} lon={lon} />\n        </td>\n        <td>\n          <Chart data={temps} color=\"orange\" units=\"C\" />\n        </td>\n        <td>\n          <Chart data={pressures} color=\"cian\" units=\"hPa\" />\n        </td>\n        <td>\n          <Chart data={humidities} color=\"blue\" units=\"%\" />\n        </td>\n      </tr>\n    );\n  }\n  render() {\n    return (\n      <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            <th>{this.props.lang.city}</th>\n            <th>{this.props.lang.temperature} (C)</th>\n            <th>{this.props.lang.pressure} (hPa)</th>\n            <th>{this.props.lang.humidity} (%)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.props.weather.map((cityData) => {\n            return this.renderWeather(cityData);\n          })}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nfunction mapStateToProps({ weather }) {\n  return { weather };\n}\n\nexport default connect(mapStateToProps)(WeatherList);\n","import React, { Component } from \"react\";\nimport SearchBar from \"../containers/search_bar\";\nimport WeatherList from \"../containers/weather_list\";\n\nimport Language from \"../lang\";\n\nconst language = Language();\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <SearchBar lang={language} />\n        <WeatherList lang={language} />\n      </div>\n    );\n  }\n}\n","const lang = () => {\n  const language = navigator && navigator.language ? navigator.language : \"es\";\n  if (language.indexOf(\"es\") !== -1) {\n    return {\n      placeholderSearch:\n        \"Buscá el pronóstico de tu ciudad por los próximos 5 días\",\n      submit: \"Buscar\",\n      city: \"Ciudad\",\n      temperature: \"Temperatura\",\n      pressure: \"Presión\",\n      humidity: \"Humedad\",\n      country: \"País\",\n    };\n  }\n  return {\n    placeholderSearch: \"Seek the forecast of your city for the next 5 days\",\n    submit: \"Search\",\n    city: \"City\",\n    temperature: \"Temperature\",\n    pressure: \"Pressure\",\n    humidity: \"Humidity\",\n    country: \"Country\",\n  };\n};\n\nexport default lang;\n","import { combineReducers } from \"redux\";\nimport ReducerWeather from \"./reducer_weather\";\nimport ReducerLocation from \"./reducer_location\";\n\nconst rootReducer = combineReducers({\n  weather: ReducerWeather,\n  location: ReducerLocation,\n});\n\nexport default rootReducer;\n","import { FETCH_WEATHER } from \"../actions/index\";\nexport default function (state = [], action) {\n  switch (action.type) {\n    case FETCH_WEATHER:\n      return [action.payload.data, ...state];\n  }\n  return state;\n}\n","import { SET_LOCATION } from \"../actions/index\";\nexport default function (\n  state = {\n    city: \"Rosario\",\n    cityAlt: null,\n    country: \"Argentina\",\n    countryCode: \"ar\",\n  },\n  action\n) {\n  switch (action.type) {\n    case SET_LOCATION:\n      return {\n        ...state,\n        city: action.payload.city,\n        cityAlt: action.payload.cityAlt,\n        country: action.payload.country,\n        countryCode: action.payload.countryCode.toLowerCase(),\n      };\n  }\n  return state;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app\";\nimport reducers from \"./reducers\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport \"./index.css\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}